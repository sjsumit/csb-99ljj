{"version":3,"sources":["components/Header/index.js","components/Pagination/index.js","components/Search/index.js","App.js","index.js"],"names":["Header","headers","onSorting","useState","sortingField","setSortingField","sortingOrder","setSortingOrder","map","name","field","sortable","key","onClick","order","onSortingChange","PaginationComponent","total","itemsPerPage","currentPage","onPageChange","totalPages","setTotalPages","useEffect","Math","ceil","paginationItems","useMemo","pages","i","push","Item","active","Prev","disabled","Next","Search","onSearch","search","setSearch","type","className","style","width","placeholder","value","onChange","e","target","App","citys","setcitys","totalItems","setTotalItems","setCurrentPage","sorting","setSorting","URL","a","fetch","then","response","json","list","getData","citysData","computedcitys","filter","city","toLowerCase","includes","id","toString","length","reversed","sort","b","localeCompare","slice","class","page","scope","round","main","temp","temp_min","pressure","humidity","wind","speed","weather","description","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4f097911.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nconst Header = ({ headers, onSorting }) => {\r\n  const [sortingField, setSortingField] = useState(\"\");\r\n  const [sortingOrder, setSortingOrder] = useState(\"asc\");\r\n\r\n  const onSortingChange = (field) => {\r\n    const order =\r\n      field === sortingField && sortingOrder === \"asc\" ? \"desc\" : \"asc\";\r\n\r\n    setSortingField(field);\r\n    setSortingOrder(order);\r\n    onSorting(field, order);\r\n  };\r\n\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {headers.map(({ name, field, sortable }) => (\r\n          <th\r\n            key={name}\r\n            onClick={() => (sortable ? onSortingChange(field) : null)}\r\n          >\r\n            {name}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport Paginate from \"react-bootstrap/Pagination\";\r\nimport \"./styles.css\";\r\n\r\nconst PaginationComponent = ({\r\n    total = 0,\r\n    itemsPerPage = 10,\r\n    currentPage = 1,\r\n    onPageChange\r\n}) => {\r\n    const [totalPages, setTotalPages] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (total > 0 && itemsPerPage > 0)\r\n            setTotalPages(Math.ceil(total / itemsPerPage));\r\n    }, [total, itemsPerPage]);\r\n\r\n    const paginationItems = useMemo(() => {\r\n        const pages = [];\r\n\r\n        for (let i = 1; i <= totalPages; i++) {\r\n            pages.push(\r\n                <Paginate.Item\r\n                    key={i}\r\n                    active={i === currentPage}\r\n                    onClick={() => onPageChange(i)}\r\n                >\r\n                    {i}\r\n                </Paginate.Item>\r\n            );\r\n        }\r\n\r\n        return pages;\r\n    }, [totalPages, currentPage]);\r\n\r\n    if (totalPages === 0) return null;\r\n\r\n    return (\r\n        <Paginate>\r\n            <Paginate.Prev\r\n                onClick={() => onPageChange(currentPage - 1)}\r\n                disabled={currentPage === 1}\r\n            />\r\n            {paginationItems}\r\n            \r\n            <Paginate.Next\r\n                onClick={() => onPageChange(currentPage + 1)}\r\n                disabled={currentPage === totalPages}\r\n            />\r\n        </Paginate>\r\n    );\r\n};\r\n\r\nexport default PaginationComponent;","import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\nconst Search = ({ onSearch }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const onInputChange = (value) => {\r\n    setSearch(value);\r\n    onSearch(value);\r\n  };\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      className=\"form-control\"\r\n      style={{ width: \"240px\" }}\r\n      placeholder=\"Search by CityName\"\r\n      value={search}\r\n      onChange={(e) => onInputChange(e.target.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport { TableHeader, Pagination, Search } from \"./components\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [citys, setcitys] = useState([]);\n  const [totalItems, setTotalItems] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [search, setSearch] = useState(\"\");\n  const [sorting, setSorting] = useState({ field: \"\", order: \"\" });\n\n  const ITEMS_PER_PAGE = 5;\n  const API_KEY = \"2131ec70e631028ff749a3e0e5d9cea0\";\n  const lat = 20.5937;\n  const lon = 78.9629;\n  const cnt = 25; //SETCHING 25 CITIES WEATHER\n  const URL = `https://api.openweathermap.org/data/2.5/find?lat=${lat}&lon=${lon}&cnt=${cnt}&appid=${API_KEY}`;\n\n  // Setting headers for content \n  const headers = [\n    { name: \"NAME\", field: \"name\", sortable: true },\n    { name: \"CURRENT_TEMP\", field: \"temp_min\", sortable: false },\n    { name: \"MAX_TEMP\", field: \"temp_max\", sortable: false },\n    { name: \"MIN_TEMP\", field: \"temp_min\", sortable: false },\n    { name: \"PRESSURE\", field: \"pressure\", sortable: false },\n    { name: \"HUMIDITY\", field: \"humidity\", sortable: false },\n    { name: \"WIND_SPEED\", field: \"speed\", sortable: false },\n    { name: \"DESCRIPTION\", field: \"description\", sortable: false }\n  ];\n \n  // API FETCHING\n  useEffect(() => {\n    const getData = async () => {\n      fetch(URL)\n        .then((response) => response.json())\n        .then((json) => {\n          setcitys(json.list);\n        });\n    };\n    getData();\n  }, []);\n\n  //RETRIEVING MATCHING DATA\n  const citysData = useMemo(() => {\n    let computedcitys = citys;\n\n    if (search) {\n      computedcitys = computedcitys.filter(\n        (city) =>\n          city.name.toLowerCase().includes(search.toLowerCase()) ||\n          city.id.toString().includes(search)\n      );\n    } else {\n    }\n\n    setTotalItems(computedcitys.length);\n\n    //Sorting citys\n    if (sorting.field) {\n       const reversed = sorting.order === \"asc\" ? 1 : -1;\n      computedcitys = computedcitys.sort(\n        (a, b) => reversed * a[sorting.field].localeCompare(b[sorting.field])\n      );\n    }\n\n    //Current Page slice\n    return computedcitys.slice(\n      (currentPage - 1) * ITEMS_PER_PAGE,\n      (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\n    );\n  }, [citys, currentPage, search, sorting]);\n\n  return (\n    <>\n    {/* CRETING NAVBAR FOR PAGE CHANGE AND SEARCH BAR */}\n    <div class=\"background\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"container-fluid pr-5\">\n          <h1>Weather App</h1>\n        </div>\n      </nav>\n      <div className=\"row w-100\">\n        <div className=\"col mb-3 col-12 text-center\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <Pagination\n                total={totalItems}\n                itemsPerPage={ITEMS_PER_PAGE}\n                currentPage={currentPage}\n                onPageChange={(page) => setCurrentPage(page)}\n              />\n            </div>\n            </div>\n{/* SEARCH BAR */}\n            <div className=\"col-md-6 d-flex flex-row-reverse\">\n              <Search\n                onSearch={(value) => {\n                  setSearch(value);\n                  setCurrentPage(1);\n                }}\n              />\n            </div>\n          </div>\n\n{/* CREATING TABLE */}\n          <table className=\"table table-striped\">\n            <TableHeader\n              headers={headers}\n              onSorting={(field, order) => setSorting({ field, order })}\n            />\n            <tbody>\n              {citysData.map((city) => (\n                <tr>\n                  <th scope=\"row\" key={city.id}>{city.name}</th>\n                  \n\n                  <td>\n                    {Math.round(city.main.temp - 273.15)}\n                    <sup>&deg;</sup>C\n                  </td>\n                  <td>\n                    {Math.round(city.main.temp_min - 273.15)}\n                    <sup>&deg;</sup>C\n                  </td>\n                  <td>\n                    {Math.round(city.main.temp_min - 273.15)}\n                    <sup>&deg;</sup>C\n                  </td>\n                  <td>{city.main.pressure} hPa</td>\n                  <td>{city.main.humidity}%</td>\n                  <td>{city.wind.speed} km/hr</td>\n                  <td>{city.weather[0].description}</td>\n                </tr>\n              ))}\n            </tbody>\n            <h5>Click on \"NAME\" to sort</h5>\n\n          </table>\n        </div>\n      </div>\n      {/* {loader} */}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n  <App/>\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}